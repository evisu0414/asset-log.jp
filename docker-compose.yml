version: "3.9"

services:
  db:
    container_name: assets-log-db
    image: assets-log/db:dev
    build:
      context: .
      dockerfile: ./infra/docker/db/Dockerfile
      cache_from:
        - assets-log/db:cache
    ports:
      - "43306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./infra/docker/db/init:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_DATABASE=assets-log
      - MYSQL_USER=assets-log
      - MYSQL_PASSWORD=assets-log
      - MYSQL_ROOT_PASSWORD=assets-log
    networks:
      - container-link

  app:
    container_name: assets-log-app
    image: assets-log/app:dev
    build:
      context: .
      dockerfile: ./infra/docker/app/Dockerfile
      cache_from:
        - assets-log/app:cache
    ports:
      - "9004:9000"
    volumes:
      - ./backend:/var/www/assets-log:cached
    networks:
      - container-link
    depends_on:
      - db

  web:
    container_name: assets-log-web
    image: assets-log/web:dev
    build:
      context: .
      dockerfile: ./infra/docker/web/Dockerfile
      cache_from:
        - assets-log/web:cache
    ports:
      - "48080:80"
    volumes:
      - ./backend:/var/www/assets-log:cached
      - ./infra/docker/web/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - container-link
    depends_on:
      - app
      - db

  front:
    container_name: assets-log-front
    image: assets-log/front:dev
    build:
      context: .
      dockerfile: ./infra/docker/front/Dockerfile
      cache_from:
        - assets-log/front:cache
    ports:
      - "4000:3000"
    volumes:
      - ./frontend:/var/www/assets-log:cached
    tty: true
    networks:
      - container-link

networks:
  default:
    name: assets-log
    external: true
  container-link:
    name: docker.internal

volumes:
  mysql-data:
    name: assets-log-data
    driver: local
